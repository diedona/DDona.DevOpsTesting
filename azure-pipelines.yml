# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest
  
variables:
  buildConfiguration: 'Release'

stages:
  - stage: Build
    displayName: 'Build'
    jobs:
      - job: 'Build'
        steps:
          - task: DotNetCoreCLI@2
            displayName: 'Restore'
            inputs:
              command: 'restore'
              projects: '**/*.csproj'

          - task: DotNetCoreCLI@2
            displayName: 'Build'
            inputs:
              command: 'build'
              arguments: '--configuration $(buildConfiguration)'
              projects: '**/*.csproj'

          - task: DotNetCoreCLI@2
            inputs:
              command: 'publish'
              publishWebProjects: true
              arguments: '--configuration $(buildConfiguration) --output $(Build.DefaultWorkingDirectory)'
  
  - stage: Deploy_Dev
    displayName: 'Deploy Dev'
    dependsOn: [Build]
    jobs:
      - job: 'Deploy'
        steps:
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Pago pelo Uso (7846457b-4101-4623-8ce2-132a758e68e3)'
              appType: 'webAppLinux'
              WebAppName: 'ddona-debrops'
              packageForLinux: '$(Build.DefaultWorkingDirectory)/**/*.zip'
              RuntimeStack: 'DOTNETCORE|5.0'